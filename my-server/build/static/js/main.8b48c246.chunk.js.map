{"version":3,"sources":["static/images/logo.png","components/Drug.js","models/model.js","components/App.js","utils/constants.js","index.js"],"names":["Drug","data","this","props","className","name","released","diseases","map","disease","index","Fragment","id","description","React","Component","getMatchingResults","searchString","a","url","request","headers","accept","method","fetch","response","Promise","resolve","reject","jsonResponse","json","ok","alert","App","handleSearch","e","key","target","value","console","log","searchResponse","setState","showSearchResults","handleClearTheSearch","state","src","logo","alt","href","htmlFor","type","placeholder","onKeyUp","onChange","hidden","length","drug","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAAe,MAA0B,iC,OCEnCA,E,4JACJ,WACE,IAAQC,EAASC,KAAKC,MAAdF,KACR,OACE,sBAEEG,UAAU,sGAFZ,UAIE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,wBAAd,SAAuCH,EAAKI,OAC5C,uBAAOD,UAAU,4CAAjB,SACGH,EAAKK,cAGTL,EAAKM,SAASC,KAAI,SAACC,EAASC,GAAV,OACjB,eAAC,IAAMC,SAAP,WACE,uBAAOP,UAAU,wBAAjB,SAA0CK,IAC1C,yBAFmBR,EAAKW,GAAKF,MAKjC,qBAAKN,UAAU,0EAAf,SACGH,EAAKY,gBAhBHZ,EAAKW,Q,GALCE,IAAMC,WA2BVf,IC7BTgB,EAAkB,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,sEAEjBC,EAAM,WAAaF,EACnBG,EAAU,CAAEC,QAAS,CAAEC,OAAQ,oBAAsBC,OAAQ,OAH5C,SAIAC,MAAML,EAAKC,GAJX,cAIjBK,EAJiB,yBAKhB,IAAIC,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,eAAAV,EAAA,sDACXW,EAAeJ,EAASK,OAC1BL,EAASM,GACXJ,EAAQE,GAERD,EAAOC,GALQ,2CAAZ,0DALgB,gCAcvBG,MAAM,gBAdiB,yDAAH,sDCMlBC,E,kDACJ,WAAY9B,GAAQ,IAAD,8BACjB,cAAMA,IAgDR+B,aAjDmB,uCAiDJ,WAAOC,GAAP,eAAAjB,EAAA,yDACC,UAAViB,EAAEC,KAAsC,KAAnBD,EAAEE,OAAOC,MADrB,uBAEXC,QAAQC,IAAI,kBAAmBL,EAAEC,IAAKD,EAAEE,OAAOC,OAFpC,SAGkBtB,EAAmBmB,EAAEE,OAAOC,OAH9C,OAGLG,EAHK,OAIXF,QAAQC,IAAIC,GACZ,EAAKC,SAAS,CAAEC,mBAAmB,EAAMF,mBAL9B,2CAjDI,wDAyDnBG,qBAAuB,SAACT,GACC,KAAnBA,EAAEE,OAAOC,QACXC,QAAQC,IAAI,0BAA2BL,EAAEE,OAAOC,OAChD,EAAKI,SAAS,CAAEC,mBAAmB,EAAOF,eAAgB,OA1D5D,EAAKI,MAAQ,CAAEF,mBAAmB,EAAOF,eAAgB,IAFxC,E,0CAInB,WAAU,IAAD,OACP,EAA8CvC,KAAK2C,MAA3CF,EAAR,EAAQA,kBAAmBF,EAA3B,EAA2BA,eAC3B,OACE,sBAAKrC,UAAU,gEAAf,UACE,sBAAKA,UAAU,gEAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,qBACE0C,IAAKC,EACL3C,UAAU,8BACV4C,IAAI,SAEN,mBACE5C,UAAU,sDACV6C,KAAK,IACLZ,OAAO,SAHT,8BAQF,uBAAOjC,UAAU,yCAAyCQ,GAAG,SAA7D,oBAGA,uBACER,UAAU,mJACV8C,QAAQ,SACRC,KAAK,SACLC,YCrCqB,yCDsCrBC,QAAS,SAAClB,GAAD,OAAO,EAAKD,aAAaC,IAClCmB,SAAU,SAACnB,GAAD,OAAO,EAAKS,qBAAqBT,MAE7C,qBACE/B,UAAU,6BACVmD,QAASZ,EAFX,qBAIWF,EAAee,OAJ1B,mBAOF,qBAAKpD,UAAU,0DAAf,SACGuC,GACCF,EAAejC,KAAI,SAACiD,GAAD,OAAU,cAAC,EAAD,CAAoBxD,KAAMwD,GAAfA,EAAK7C,gB,GA5CvCE,IAAMC,WAkETkB,IElEbM,QAAQC,IAAM,aAGhBkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8b48c246.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.c863f48e.png\";","import React from \"react\";\r\n\r\nclass Drug extends React.Component {\r\n  render() {\r\n    const { data } = this.props;\r\n    return (\r\n      <div\r\n        key={data.id}\r\n        className=\"py-3 px-4 border-solid border-2 border-blue-400 rounded-md space-y-1 w-full text-gray-600 shadow-md\"\r\n      >\r\n        <div className=\"grid grid-cols-2\">\r\n          <h4 className=\"text-gray-600 text-xl\">{data.name}</h4>\r\n          <label className=\"text-gray-600 text-xs place-self-end mr-0\">\r\n            {data.released}\r\n          </label>\r\n        </div>\r\n        {data.diseases.map((disease, index) => (\r\n          <React.Fragment key={data.id + index}>\r\n            <label className=\"text-gray-600 text-xs\">{disease}</label>\r\n            <br />\r\n          </React.Fragment>\r\n        ))}\r\n        <div className=\"py-2 px-2 border-dotted border-2 border-blue-400  w-full text-gray-600 \">\r\n          {data.description}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Drug;\r\n","const getMatchingResults = async (searchString) => {\r\n  try {\r\n    const url = \"/search/\" + searchString;\r\n    const request = { headers: { accept: \"application/json\" }, method: \"GET\" };\r\n    const response = await fetch(url, request);\r\n    return new Promise(async (resolve, reject) => {\r\n      const jsonResponse = response.json();\r\n      if (response.ok) {\r\n        resolve(jsonResponse);\r\n      } else {\r\n        reject(jsonResponse);\r\n      }\r\n    });\r\n  } catch (e) {\r\n    alert(\"Error: \" + e);\r\n  }\r\n};\r\nexport { getMatchingResults };\r\n","import logo from \"../static/images/logo.png\";\nimport { searchPlaceholder } from \"../utils/constants\";\nimport React from \"react\";\nimport Drug from \"./Drug\";\nimport { getMatchingResults } from \"../models/model\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { showSearchResults: false, searchResponse: [] };\n  }\n  render() {\n    const { showSearchResults, searchResponse } = this.state;\n    return (\n      <div className=\"relative flex flex-col py-8 m-auto w-3/5 h-screen font-medium\">\n        <div className=\"sticky flex flex-col space-y-5 left-0 right-0 top-0 px-4 py-3\">\n          <div className=\"grid grid-cols-2\">\n            <img\n              src={logo}\n              className=\"w-12 h-12 md:w-12 md:h-auto\"\n              alt=\"logo\"\n            />\n            <a\n              className=\"text-gray-600 text-sm underline place-self-end mr-0\"\n              href=\"#\"\n              target=\"_blank\"\n            >\n              external link\n            </a>\n          </div>\n          <label className=\"text-gray-600 text-lg h-auto mx-2 my-8\" id=\"search\">\n            Search\n          </label>\n          <input\n            className=\"py-3 px-4 border-solid border-2 border-blue-400 rounded-md placeholder-gray-400 italic w-full text-gray-800 text-lg shadow-md focus:outline-none\"\n            htmlFor=\"search\"\n            type=\"search\"\n            placeholder={searchPlaceholder}\n            onKeyUp={(e) => this.handleSearch(e)}\n            onChange={(e) => this.handleClearTheSearch(e)}\n          ></input>\n          <h3\n            className=\"text-gray-600 text-sm mx-2\"\n            hidden={!showSearchResults}\n          >\n            Showing {searchResponse.length} result(s)\n          </h3>\n        </div>\n        <div className=\"relative overflow-auto pt-2 px-4 space-y-4 no-scrollbar\">\n          {showSearchResults &&\n            searchResponse.map((drug) => <Drug key={drug.id} data={drug} />)}\n        </div>\n      </div>\n    );\n  }\n\n  handleSearch = async (e) => {\n    if (e.key === \"Enter\" && e.target.value !== \"\") {\n      console.log(\"In handleSearch\", e.key, e.target.value);\n      const searchResponse = await getMatchingResults(e.target.value);\n      console.log(searchResponse);\n      this.setState({ showSearchResults: true, searchResponse });\n    }\n  };\n  handleClearTheSearch = (e) => {\n    if (e.target.value === \"\") {\n      console.log(\"In handleClearTheSearch\", e.target.value);\n      this.setState({ showSearchResults: false, searchResponse: [] });\n    }\n  };\n}\n\nexport default App;\n","export const searchPlaceholder = \"You can search by drug name or disease\";\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nif (process.env.NODE_ENV !== \"development\") {\n  console.log = () => {};\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}